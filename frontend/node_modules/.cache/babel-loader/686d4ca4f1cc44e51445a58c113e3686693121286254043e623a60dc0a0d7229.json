{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nclass TodoService {\n  constructor() {\n    console.log('TodoService constructor called');\n    console.log('axios:', axios);\n    this.api = axios.create({\n      baseURL: API_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('this.api created:', this.api);\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('auth-token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n  }\n  async getTodos(params = {}) {\n    const response = await this.api.get('/todos', {\n      params\n    });\n    return response.data;\n  }\n  async getTodo(id) {\n    const response = await this.api.get(`/todos/${id}`);\n    return response.data;\n  }\n  async createTodo(todoData) {\n    console.log('createTodo called with:', todoData);\n    console.log('this.api:', this.api);\n    const response = await this.api.post('/todos', todoData);\n    return response.data;\n  }\n  async updateTodo(id, todoData) {\n    const response = await this.api.put(`/todos/${id}`, todoData);\n    return response.data;\n  }\n  async deleteTodo(id) {\n    const response = await this.api.delete(`/todos/${id}`);\n    return response.data;\n  }\n  async getTodoStats() {\n    const response = await this.api.get('/todos/stats/summary');\n    return response.data;\n  }\n}\nexport const todoService = new TodoService();","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","TodoService","constructor","console","log","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","getTodos","params","response","get","data","getTodo","id","createTodo","todoData","post","updateTodo","put","deleteTodo","delete","getTodoStats","todoService"],"sources":["/Users/iibrath/projects/TestingIBMVelocity/TestingIBMVelocity/frontend/src/services/todoService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nclass TodoService {\n  constructor() {\n    console.log('TodoService constructor called');\n    console.log('axios:', axios);\n    this.api = axios.create({\n      baseURL: API_URL,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    console.log('this.api created:', this.api);\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use(\n      (config) => {\n        const token = localStorage.getItem('auth-token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n  }\n\n  async getTodos(params = {}) {\n    const response = await this.api.get('/todos', { params });\n    return response.data;\n  }\n\n  async getTodo(id) {\n    const response = await this.api.get(`/todos/${id}`);\n    return response.data;\n  }\n\n  async createTodo(todoData) {\n    console.log('createTodo called with:', todoData);\n    console.log('this.api:', this.api);\n    const response = await this.api.post('/todos', todoData);\n    return response.data;\n  }\n\n  async updateTodo(id, todoData) {\n    const response = await this.api.put(`/todos/${id}`, todoData);\n    return response.data;\n  }\n\n  async deleteTodo(id) {\n    const response = await this.api.delete(`/todos/${id}`);\n    return response.data;\n  }\n\n  async getTodoStats() {\n    const response = await this.api.get('/todos/stats/summary');\n    return response.data;\n  }\n}\n\nexport const todoService = new TodoService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,MAAMC,WAAW,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACZC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7CD,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAER,KAAK,CAAC;IAC5B,IAAI,CAACS,GAAG,GAAGT,KAAK,CAACU,MAAM,CAAC;MACtBC,OAAO,EAAEV,OAAO;MAChBW,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFL,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACC,GAAG,CAAC;;IAE1C;IACA,IAAI,CAACA,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;MACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAChD,IAAIF,KAAK,EAAE;QACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;MAClD;MACA,OAAOD,MAAM;IACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;EACH;EAEA,MAAMG,QAAQA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE;IAC1B,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACjB,GAAG,CAACkB,GAAG,CAAC,QAAQ,EAAE;MAAEF;IAAO,CAAC,CAAC;IACzD,OAAOC,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMC,OAAOA,CAACC,EAAE,EAAE;IAChB,MAAMJ,QAAQ,GAAG,MAAM,IAAI,CAACjB,GAAG,CAACkB,GAAG,CAAC,UAAUG,EAAE,EAAE,CAAC;IACnD,OAAOJ,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMG,UAAUA,CAACC,QAAQ,EAAE;IACzBzB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEwB,QAAQ,CAAC;IAChDzB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACC,GAAG,CAAC;IAClC,MAAMiB,QAAQ,GAAG,MAAM,IAAI,CAACjB,GAAG,CAACwB,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;IACxD,OAAON,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMM,UAAUA,CAACJ,EAAE,EAAEE,QAAQ,EAAE;IAC7B,MAAMN,QAAQ,GAAG,MAAM,IAAI,CAACjB,GAAG,CAAC0B,GAAG,CAAC,UAAUL,EAAE,EAAE,EAAEE,QAAQ,CAAC;IAC7D,OAAON,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMQ,UAAUA,CAACN,EAAE,EAAE;IACnB,MAAMJ,QAAQ,GAAG,MAAM,IAAI,CAACjB,GAAG,CAAC4B,MAAM,CAAC,UAAUP,EAAE,EAAE,CAAC;IACtD,OAAOJ,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMU,YAAYA,CAAA,EAAG;IACnB,MAAMZ,QAAQ,GAAG,MAAM,IAAI,CAACjB,GAAG,CAACkB,GAAG,CAAC,sBAAsB,CAAC;IAC3D,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF;AAEA,OAAO,MAAMW,WAAW,GAAG,IAAIlC,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}